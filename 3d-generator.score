{"Document":{"ObjectName":"Scenario::ScenarioDocumentModel","id":1,"BaseScenario":{"ObjectName":"Scenario::BaseScenario","id":0,"Constraint":{"ObjectName":"Scenario::IntervalModel","id":0,"Metadata":{"ScriptingName":"3d-generator","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Init":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[{"uuid":"de035912-5b03-49a8-bc4d-b2cba68e21d9","ObjectName":"Scenario","id":1,"Metadata":{"ScriptingName":"Scenario.1","Comment":"","Color":"Transparent1","Label":"","Touched":false},"Duration":10584000000,"Height":1500.0,"StartOffset":0,"LoopDuration":10584000000,"Pos":[40.0,40.0],"Size":[200.0,100.0],"Loops":false,"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"In","Exposed":"in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Out","Exposed":"out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Init":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"StartTimeNodeId":0,"StartEventId":0,"StartStateId":0,"Exclusive":false,"TimeNodes":[{"ObjectName":"Scenario::TimeSyncModel","id":0,"Metadata":{"ScriptingName":"Sync.start","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":0,"Events":[0],"MusicalSync":-1.0,"AutoTrigger":false,"Start":true,"Active":false,"Expression":" { true == false } "},{"ObjectName":"Scenario::TimeSyncModel","id":5,"Metadata":{"ScriptingName":"Sync.alai28","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":9172800000,"Events":[5],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":true,"Expression":" { true == false } "}],"Events":[{"ObjectName":"Scenario::EventModel","id":0,"Metadata":{"ScriptingName":"Event.start","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":0,"States":[0,8],"Condition":"","Date":0,"Offset":0},{"ObjectName":"Scenario::EventModel","id":5,"Metadata":{"ScriptingName":"Event.pert68","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":5,"States":[9],"Condition":"","Date":9172800000,"Offset":0}],"States":[{"ObjectName":"Scenario::StateModel","id":0,"Metadata":{"ScriptingName":"State.start","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":0,"PreviousConstraint":null,"NextConstraint":null,"HeightPercentage":0.04533333333333334,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":8,"Metadata":{"ScriptingName":"State.tail89","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":0,"PreviousConstraint":null,"NextConstraint":6,"HeightPercentage":0.03933333333333339,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":9,"Metadata":{"ScriptingName":"State.base3","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":5,"PreviousConstraint":6,"NextConstraint":null,"HeightPercentage":0.03933333333333339,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]}],"Constraints":[{"ObjectName":"Scenario::IntervalModel","id":6,"Metadata":{"ScriptingName":"Render","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Init":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[{"uuid":"bf603921-5a48-4aa5-9bc1-48a762be6467","ObjectName":"Process::ProcessModel","id":8,"Metadata":{"ScriptingName":"Smooth","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":9172800000,"Height":300.0,"StartOffset":0,"LoopDuration":9172800000,"Pos":[-498.7670217453447,-379.935785138083],"Size":[80.96875,22.0],"Loops":false,"Inlets":[{"uuid":"769dd38a-bfb3-4dc6-b52a-b6abb7afe2a3","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"in","Exposed":"in"},{"uuid":"8b1d76c4-3838-4ac0-9b9c-c12bc5db8e8a","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"Type","Exposed":"type","Value":{"String":"OneEuro"},"Init":{},"Domain":{"String":{"Values":["OneEuro","LowPass","Average","Median"]}},"Values":["OneEuro","LowPass","Average","Median"],"Pixmaps":[]},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"Amount","Exposed":"amount","Value":{"Float":1.0},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"5554eb67-bcc8-45ab-8ec2-37a3f191aa64","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"Freq (1e/LP)","Exposed":"freq (1e_lp)","Value":{"Float":300.0},"Init":{},"Domain":{"Float":{"Min":0.0010000000474974513,"Max":300.0}}},{"uuid":"5554eb67-bcc8-45ab-8ec2-37a3f191aa64","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"Cutoff (1e/LP)","Exposed":"cutoff (1e_lp)","Value":{"Float":1.0},"Init":{},"Domain":{"Float":{"Min":0.0010000000474974513,"Max":10.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"Beta (1e only)","Exposed":"beta (1e only)","Value":{"Float":0.038116004317998886},"Init":{},"Domain":{"Float":{"Min":0.0010000000474974513,"Max":10.0}}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"Continuous","Exposed":"continuous","Value":{"Bool":true},"Init":{},"Domain":{"Bool":null}}],"Outlets":[{"uuid":"cff96158-cc72-46d7-99dc-b6038171375b","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"out","Exposed":"out"}]},{"uuid":"1e17e479-3513-44c8-a8a7-017be9f6ac8a","ObjectName":"Process::ProcessModel","id":7,"Metadata":{"ScriptingName":"LFO","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":9172800000,"Height":300.0,"StartOffset":0,"LoopDuration":9172800000,"Pos":[-956.0252577919867,-256.423827790994],"Size":[256.7109375,107.5],"Loops":false,"Inlets":[{"uuid":"5554eb67-bcc8-45ab-8ec2-37a3f191aa64","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"Frequency","Exposed":"frequency","Value":{"Float":0.09457714855670929},"Init":{},"Domain":{"Float":{"Min":0.009999999776482582,"Max":100.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"Ampl.","Exposed":"ampl.","Value":{"Float":2.0},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":2.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"Offset","Exposed":"offset","Value":{"Float":0.001851797103881836},"Init":{},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"Jitter","Exposed":"jitter","Value":{"Float":0.0},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"Phase","Exposed":"phase","Value":{"Float":0.0},"Init":{},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"8b1d76c4-3838-4ac0-9b9c-c12bc5db8e8a","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"Waveform","Exposed":"waveform","Value":{"String":"Sample & Hold"},"Init":{},"Domain":{"String":{"Values":["Sin","Triangle","Saw","Square","Sample & Hold","Noise 1","Noise 2","Noise 3"]}},"Values":["Sin","Triangle","Saw","Square","Sample & Hold","Noise 1","Noise 2","Noise 3"],"Pixmaps":[":/icons/wave_sin_off.png",":/icons/wave_sin_on.png",":/icons/wave_triangle_off.png",":/icons/wave_triangle_on.png",":/icons/wave_saw_off.png",":/icons/wave_saw_on.png",":/icons/wave_square_off.png",":/icons/wave_square_on.png",":/icons/wave_sample_and_hold_off.png",":/icons/wave_sample_and_hold_on.png",":/icons/wave_noise1_off.png",":/icons/wave_noise1_on.png",":/icons/wave_noise2_off.png",":/icons/wave_noise2_on.png",":/icons/wave_noise3_off.png",":/icons/wave_noise3_on.png"]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"Quantification","Exposed":"quantification","Value":{"Float":0.0},"Init":{},"Domain":{"Float":{"Values":[0.0,1.0,0.5,0.25,0.125,0.0625,0.03125,0.015625,0.75,0.375,0.1875,0.09375,0.046875]}},"Values":[["None",{"Float":0.0}],["Whole",{"Float":1.0}],["Half",{"Float":0.5}],["4th",{"Float":0.25}],["8th",{"Float":0.125}],["16th",{"Float":0.0625}],["32th",{"Float":0.03125}],["64th",{"Float":0.015625}],["Dotted Half",{"Float":0.75}],["Dotted 4th",{"Float":0.375}],["Dotted 8th",{"Float":0.1875}],["Dotted 16th",{"Float":0.09375}],["Dotted 32th",{"Float":0.046875}]]}],"Outlets":[{"uuid":"cff96158-cc72-46d7-99dc-b6038171375b","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"out","Exposed":"out"}]},{"uuid":"d757bd0d-c0a1-4aec-bf72-945b722ab85b","ObjectName":"Process::ProcessModel","id":6,"Metadata":{"ScriptingName":"XYZ","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":9172800000,"Height":300.0,"StartOffset":0,"LoopDuration":9172800000,"Pos":[-335.2252355320814,-143.82566212209338],"Size":[221.0,90.0],"Loops":false,"Inlets":[{"uuid":"9ae797ea-d94c-4792-acec-9ec1932bae5d","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"Expression (ExprTK)","Exposed":"expression (exprtk)","Value":{"String":"return [10a * a * a , 10b * b, 10c];"},"Init":{},"Domain":{}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"Param (a)","Exposed":"param (a)","Value":{"Float":1.0},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"Param (b)","Exposed":"param (b)","Value":{"Float":1.0},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"Param (c)","Exposed":"param (c)","Value":{"Float":1.0},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"cff96158-cc72-46d7-99dc-b6038171375b","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"out","Exposed":"out"}]},{"uuid":"c953fa55-65f0-4b93-8bfc-54780250d2b8","ObjectName":"Step","id":5,"Metadata":{"ScriptingName":"Step sequencer","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":9172800000,"Height":300.0,"StartOffset":0,"LoopDuration":9172800000,"Pos":[111.17365247994589,-185.2061839663959],"Size":[300.0,120.0],"Loops":false,"Outlet":{"uuid":"cff96158-cc72-46d7-99dc-b6038171375b","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Value out","Exposed":"value out"},"Steps":[0.5,0.30000001192092896,0.5,0.800000011920929,1.0,0.0,0.5,0.10000000149011612],"StepCount":8,"StepDur":20000,"StepMin":-1.0,"StepMax":1.0},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":3,"Metadata":{"ScriptingName":"City Lights","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":9172800000,"Height":300.0,"StartOffset":0,"LoopDuration":4586400000,"Pos":[356.3207583788775,84.12299105413945],"Size":[99.78125,22.0],"Loops":false,"Vertex":"#if __VERSION__ <= 120\nvarying vec2\t\tleft_coord;\nvarying vec2\t\tright_coord;\nvarying vec2\t\tabove_coord;\nvarying vec2\t\tbelow_coord;\n\nvarying vec2\t\tlefta_coord;\nvarying vec2\t\trighta_coord;\nvarying vec2\t\tleftb_coord;\nvarying vec2\t\trightb_coord;\n\nvarying vec2\t\ttexOffsets[5];\n#else\nout vec2\t\tleft_coord;\nout vec2\t\tright_coord;\nout vec2\t\tabove_coord;\nout vec2\t\tbelow_coord;\n\nout vec2\t\tlefta_coord;\nout vec2\t\trighta_coord;\nout vec2\t\tleftb_coord;\nout vec2\t\trightb_coord;\n\nout vec2\t\ttexOffsets[5];\n#endif\n\nvoid main(void)\t{\n\t//\tload the main shader stuff\n\tisf_vertShaderInit();\n\t\n\t\n\tint\t\t\tblurLevel = int(floor(blurAmount/6.0));\n\tfloat\t\tblurLevelModulus = mod(blurAmount, 6.0);\n\tfloat\t\tblurRadius = 0.0;\n\tfloat\t\tblurRadiusInPixels = 0.0;\n\t//\tfirst pass draws edges\n\tif (PASSINDEX==0)\t{\n\t\tvec2 texc = vec2(isf_FragNormCoord[0],isf_FragNormCoord[1]);\n\t\tvec2 d = 1.0/RENDERSIZE;\n\t\t\n\t\tleft_coord = clamp(vec2(texc.xy + vec2(-d.x , 0)),0.0,1.0);\n\t\tright_coord = clamp(vec2(texc.xy + vec2(d.x , 0)),0.0,1.0);\n\t\tabove_coord = clamp(vec2(texc.xy + vec2(0,d.y)),0.0,1.0);\n\t\tbelow_coord = clamp(vec2(texc.xy + vec2(0,-d.y)),0.0,1.0);\n\t\n\t\tlefta_coord = clamp(vec2(texc.xy + vec2(-d.x , d.x)),0.0,1.0);\n\t\trighta_coord = clamp(vec2(texc.xy + vec2(d.x , d.x)),0.0,1.0);\n\t\tleftb_coord = clamp(vec2(texc.xy + vec2(-d.x , -d.x)),0.0,1.0);\n\t\trightb_coord = clamp(vec2(texc.xy + vec2(d.x , -d.x)),0.0,1.0);\n\t}\n\t//\tnext three passes are just drawing the texture- do nothing\n\t\n\t//\tthe next four passes do gaussion blurs on the various levels\n\telse if (PASSINDEX==4 || PASSINDEX==6)\t{\n\t\tfloat\t\tpixelWidth = 1.0/RENDERSIZE.x;\n\t\t//\tpass 4 is sampling 1/8, but writing to 1/4\n\t\tif (PASSINDEX==4)\t{\n\t\t\tif (blurLevel==1)\n\t\t\t\tblurRadius = blurLevelModulus/1.5;\n\t\t\telse if (blurLevel>1)\n\t\t\t\tblurRadius = 4.0;\n\t\t}\n\t\t//\tpass 6 is sampling 1/4 and writing to full-size\n\t\telse if (PASSINDEX==6)\t{\n\t\t\tif (blurLevel==0)\n\t\t\t\tblurRadius = blurLevelModulus;\n\t\t\telse if (blurLevel>0)\n\t\t\t\tblurRadius = 6.0;\n\t\t}\n\t\tblurRadiusInPixels = pixelWidth * blurRadius;\n\t\ttexOffsets[0] = isf_FragNormCoord;\n\t\ttexOffsets[1] = (blurRadius==0.0) ? isf_FragNormCoord : clamp(vec2(isf_FragNormCoord[0]-blurRadiusInPixels, isf_FragNormCoord[1]),0.0,1.0);\n\t\ttexOffsets[2] = (blurRadius==0.0) ? isf_FragNormCoord : clamp(vec2(isf_FragNormCoord[0]+blurRadiusInPixels, isf_FragNormCoord[1]),0.0,1.0);\n\t\tif (PASSINDEX==4)\t{\n\t\t\ttexOffsets[3] = (blurRadius==0.0) ? isf_FragNormCoord : clamp(vec2(isf_FragNormCoord[0]-(2.0*blurRadiusInPixels), isf_FragNormCoord[1]),0.0,1.0);\n\t\t\ttexOffsets[4] = (blurRadius==0.0) ? isf_FragNormCoord : clamp(vec2(isf_FragNormCoord[0]+(2.0*blurRadiusInPixels), isf_FragNormCoord[1]),0.0,1.0);\n\t\t}\n\t}\n\telse if (PASSINDEX==5 || PASSINDEX==7)\t{\n\t\tfloat\t\tpixelHeight = 1.0/RENDERSIZE.y;\n\t\t//\tpass 5 is sampling 1/14, but writing to 1/4\n\t\tif (PASSINDEX==5)\t{\n\t\t\tif (blurLevel==1)\n\t\t\t\tblurRadius = blurLevelModulus/1.5;\n\t\t\telse if (blurLevel>1)\n\t\t\t\tblurRadius = 4.0;\n\t\t}\n\t\t//\tpass 7 is sampling 1/4 and writing to full-size\n\t\telse if (PASSINDEX==7)\t{\n\t\t\tif (blurLevel==0)\n\t\t\t\tblurRadius = blurLevelModulus;\n\t\t\telse if (blurLevel>0)\n\t\t\t\tblurRadius = 6.0;\n\t\t}\n\t\tblurRadiusInPixels = pixelHeight * blurRadius;\n\t\ttexOffsets[0] = isf_FragNormCoord;\n\t\ttexOffsets[1] = (blurRadius==0.0) ? isf_FragNormCoord : clamp(vec2(isf_FragNormCoord[0], isf_FragNormCoord[1]-blurRadiusInPixels),0.0,1.0);\n\t\ttexOffsets[2] = (blurRadius==0.0) ? isf_FragNormCoord : clamp(vec2(isf_FragNormCoord[0], isf_FragNormCoord[1]+blurRadiusInPixels),0.0,1.0);\n\t\tif (PASSINDEX==5)\t{\n\t\t\ttexOffsets[3] = (blurRadius==0.0) ? isf_FragNormCoord : clamp(vec2(isf_FragNormCoord[0], isf_FragNormCoord[1]-(2.0*blurRadiusInPixels)),0.0,1.0);\n\t\t\ttexOffsets[4] = (blurRadius==0.0) ? isf_FragNormCoord : clamp(vec2(isf_FragNormCoord[0], isf_FragNormCoord[1]+(2.0*blurRadiusInPixels)),0.0,1.0);\n\t\t}\n\t}\n\t\n}\n","Fragment":"/*{\n\t\"CREDIT\": \"by VIDVOX\",\n\t\"ISFVSN\": \"2\",\n\t\"CATEGORIES\": [\n\t\t\"Stylize\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\": \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"blurAmount\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 12.0,\n\t\t\t\"DEFAULT\": 4.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"intensity\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0,\n\t\t\t\"DEFAULT\": 0.5\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"edgeIntensity\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 100.0,\n\t\t\t\"DEFAULT\": 15.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"edgeThreshold\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0,\n\t\t\t\"DEFAULT\": 0.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"erodeIntensity\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0,\n\t\t\t\"DEFAULT\": 0.25\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"erodeRadius\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 1.0,\n\t\t\t\"MAX\": 15.0,\n\t\t\t\"DEFAULT\": 1.0\n\t\t}\n\t],\n\t\"PASSES\": [\n\t\t{\n\t\t\t\"TARGET\": \"edges\",\n\t\t\t\"DESCRIPTION\": \"PASSINDEX is 0\",\n\t\t\t\"DESCRIPTION\": \"Pass 0\"\n\t\t},\n\t\t{\n\t\t\t\"TARGET\": \"halfSize\",\n\t\t\t\"WIDTH\": \"floor($WIDTH/2.0)\",\n\t\t\t\"HEIGHT\": \"floor($HEIGHT/2.0)\",\n\t\t\t\"DESCRIPTION\": \"pass 1, 1x horiz sampling (3 wide total) to prevent data loss\"\n\t\t},\n\t\t{\n\t\t\t\"TARGET\": \"quarterSizePassA\",\n\t\t\t\"WIDTH\": \"floor($WIDTH/4.0)\",\n\t\t\t\"HEIGHT\": \"floor($HEIGHT/4.0)\",\n\t\t\t\"DESCRIPTION\": \"pass 2, vert sampling, use erodeRadius (size is being reduced, halve coords deltas when sampling)\"\n\t\t},\n\t\t{\n\t\t\t\"TARGET\": \"quarterSizePassB\",\n\t\t\t\"WIDTH\": \"floor($WIDTH/4.0)\",\n\t\t\t\"HEIGHT\": \"floor($HEIGHT/4.0)\",\n\t\t\t\"DESCRIPTION\": \"pass 3, horiz sampling, use erodeRadius\"\n\t\t},\n\t\t{\n\t\t\t\"TARGET\": \"quarterGaussA\",\n\t\t\t\"WIDTH\": \"floor($WIDTH/4.0)\",\n\t\t\t\"HEIGHT\": \"floor($HEIGHT/4.0)\",\n\t\t\t\"DESCRIPTION\": \"Pass 4\"\n\t\t},\n\t\t{\n\t\t\t\"TARGET\": \"quarterGaussB\",\n\t\t\t\"WIDTH\": \"floor($WIDTH/4.0)\",\n\t\t\t\"HEIGHT\": \"floor($HEIGHT/4.0)\",\n\t\t\t\"DESCRIPTION\": \"Pass 5\"\n\t\t},\n\t\t{\n\t\t\t\"TARGET\": \"fullGaussA\",\n\t\t\t\"DESCRIPTION\": \"Pass 6\"\n\t\t},\n\t\t{\n\t\t\t\"TARGET\": \"fullGaussB\",\n\t\t\t\"DESCRIPTION\": \"Pass 7\"\n\t\t}\n\t]\n}*/\n\n#if __VERSION__ <= 120\nvarying vec2\t\tleft_coord;\nvarying vec2\t\tright_coord;\nvarying vec2\t\tabove_coord;\nvarying vec2\t\tbelow_coord;\n\nvarying vec2\t\tlefta_coord;\nvarying vec2\t\trighta_coord;\nvarying vec2\t\tleftb_coord;\nvarying vec2\t\trightb_coord;\n\nvarying vec2\t\ttexOffsets[5];\n#else\nin vec2\t\tleft_coord;\nin vec2\t\tright_coord;\nin vec2\t\tabove_coord;\nin vec2\t\tbelow_coord;\n\nin vec2\t\tlefta_coord;\nin vec2\t\trighta_coord;\nin vec2\t\tleftb_coord;\nin vec2\t\trightb_coord;\n\nin vec2\t\ttexOffsets[5];\n#endif\n\nvec3 rgb2hsv(vec3 c);\nfloat gray(vec4 n);\n\n\n\nvoid main() {\n\tint\t\t\tblurLevel = int(floor(blurAmount/6.0));\n\tfloat\t\tblurLevelModulus = mod(blurAmount, 6.0);\n\t//\tfirst pass draws edges\n\tif (PASSINDEX==0)\t{\n\t\tvec4 color = IMG_THIS_PIXEL(inputImage);\n\t\tvec4 colorL = IMG_NORM_PIXEL(inputImage, left_coord);\n\t\tvec4 colorR = IMG_NORM_PIXEL(inputImage, right_coord);\n\t\tvec4 colorA = IMG_NORM_PIXEL(inputImage, above_coord);\n\t\tvec4 colorB = IMG_NORM_PIXEL(inputImage, below_coord);\n\t\n\t\tvec4 colorLA = IMG_NORM_PIXEL(inputImage, lefta_coord);\n\t\tvec4 colorRA = IMG_NORM_PIXEL(inputImage, righta_coord);\n\t\tvec4 colorLB = IMG_NORM_PIXEL(inputImage, leftb_coord);\n\t\tvec4 colorRB = IMG_NORM_PIXEL(inputImage, rightb_coord);\n\t\n\t\tfloat gx = (-1.0 * gray(colorLA)) + (-2.0 * gray(colorL)) + (-1.0 * gray(colorLB)) + (1.0 * gray(colorRA)) + (2.0 * gray(colorR)) + (1.0 * gray(colorRB));\n\t\tfloat gy = (1.0 * gray(colorLA)) + (2.0 * gray(colorA)) + (1.0 * gray(colorRA)) + (-1.0 * gray(colorRB)) + (-2.0 * gray(colorB)) + (-1.0 * gray(colorLB));\n\t\t\n\t\tfloat bright = pow(gx*gx + gy*gy,0.5);\n\t\tvec4 final = color * bright;\n\t\t\n\t\t//\tif the brightness is below the threshold draw black\n\t\tif (bright < edgeThreshold)\t{\n\t\t\tfinal = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t}\n\t\telse\t{\n\t\t\tfinal = final * edgeIntensity;\n\t\t\tfinal.a = 1.0;\n\t\t}\n\t\t\n\t\tgl_FragColor = final;\n\t}\n\t//\tnext three passes are doing an erode.  the first and third are doing horizontal sampling, the second is doing vert sampling\n\telse if (PASSINDEX==1 || PASSINDEX==2 || PASSINDEX==3)\t{\n\t\t//\tgenerally speaking, sample a bunch of pixels, for each sample convert color val to HSV, if luma is greater than max luma, that's the new color\n\t\tvec2\t\ttmpCoord;\n\t\tfloat\t\tmaxLuma;\n\t\tvec4\t\tmaxLumaRGBColor = vec4(0.0);\n\t\tvec4\t\tsampleColorRGB;\n\t\tvec4\t\tsampleColorHSV;\n\t\tvec2\t\tpixelWidth = 1.0/RENDERSIZE.xy;\n\t\tfloat\t\tlocalBlurRadius;\n\t\tbool\t\tvertFlag = false;\n\t\t\n\t\t//\tpass 0 and 2 are doing horizontal erosion\n\t\tif (PASSINDEX==2)\n\t\t\tvertFlag = true;\n\t\t//\tthe first pass should have a blur radius of 1.0 simply to prevent the loss of information while reducing resolution\n\t\tif (PASSINDEX==1)\n\t\t\tlocalBlurRadius = 1.0;\n\t\t//\tother passes go by the blur radius!\n\t\telse\n\t\t\tlocalBlurRadius = float(int(erodeRadius));\n\t\t//\tsample pixels as per the blur radius...\n\t\tfor (float i=0.; i<=localBlurRadius; ++i)\t{\n\t\t\tif (PASSINDEX==1)\t{\n\t\t\t\ttmpCoord = vec2(clamp(isf_FragNormCoord.x+(i*pixelWidth.x), 0., 1.), isf_FragNormCoord.y);\n\t\t\t\tsampleColorRGB = IMG_NORM_PIXEL(edges, tmpCoord);\n\t\t\t}\n\t\t\telse if (PASSINDEX==2)\t{\n\t\t\t\ttmpCoord = vec2(isf_FragNormCoord.x, clamp(isf_FragNormCoord.y+(i*pixelWidth.y), 0., 1.));\n\t\t\t\tsampleColorRGB = IMG_NORM_PIXEL(halfSize, tmpCoord);\n\t\t\t}\n\t\t\telse if (PASSINDEX==3)\t{\n\t\t\t\ttmpCoord = vec2(clamp(isf_FragNormCoord.x+(i*pixelWidth.x), 0., 1.), isf_FragNormCoord.y);\n\t\t\t\tsampleColorRGB = IMG_NORM_PIXEL(quarterSizePassA, tmpCoord);\n\t\t\t}\n\t\t\t//\tif this is the first sample for this fragment, don't bother comparing- just set the max luma stuff\n\t\t\tif (i == 0.)\t{\n\t\t\t\tmaxLuma = rgb2hsv(sampleColorRGB.rgb).b;\n\t\t\t\tmaxLumaRGBColor = sampleColorRGB;\n\t\t\t}\n\t\t\t//\telse this isn't the first sample...\n\t\t\telse\t{\n\t\t\t\t//\tcompare, determine if it's the max luma\n\t\t\t\tsampleColorRGB = mix(maxLumaRGBColor, sampleColorRGB, 1.*erodeIntensity/i);\n\t\t\t\tsampleColorHSV.rgb = rgb2hsv(sampleColorRGB.rgb);\n\t\t\t\tif (sampleColorHSV.b > maxLuma)\t{\n\t\t\t\t\tmaxLuma = sampleColorHSV.b;\n\t\t\t\t\tmaxLumaRGBColor = sampleColorRGB;\n\t\t\t\t}\n\t\t\t\t//\tdo another sample for the negative coordinate\n\t\t\t\tif (PASSINDEX==1)\t{\n\t\t\t\t\ttmpCoord = vec2(clamp(isf_FragNormCoord.x-(i*pixelWidth.x), 0., 1.), isf_FragNormCoord.y);\n\t\t\t\t\tsampleColorRGB = IMG_NORM_PIXEL(edges, tmpCoord);\n\t\t\t\t}\n\t\t\t\telse if (PASSINDEX==2)\t{\n\t\t\t\t\ttmpCoord = vec2(isf_FragNormCoord.x, clamp(isf_FragNormCoord.y-(i*pixelWidth.y), 0., 1.));\n\t\t\t\t\tsampleColorRGB = IMG_NORM_PIXEL(halfSize, tmpCoord);\n\t\t\t\t}\n\t\t\t\telse if (PASSINDEX==3)\t{\n\t\t\t\t\ttmpCoord = vec2(clamp(isf_FragNormCoord.x-(i*pixelWidth.x), 0., 1.), isf_FragNormCoord.y);\n\t\t\t\t\tsampleColorRGB = IMG_NORM_PIXEL(quarterSizePassA, tmpCoord);\n\t\t\t\t}\n\t\t\t\tsampleColorRGB = mix(maxLumaRGBColor, sampleColorRGB, 1.*erodeIntensity/i);\n\t\t\t\tsampleColorHSV.rgb = rgb2hsv(sampleColorRGB.rgb);\n\t\t\t\tif (sampleColorHSV.b > maxLuma)\t{\n\t\t\t\t\tmaxLuma = sampleColorHSV.b;\n\t\t\t\t\tmaxLumaRGBColor = sampleColorRGB;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tgl_FragColor = maxLumaRGBColor;\n\t\t\n\t}\n\t//\tstart reading from the previous stage- each two passes completes a gaussian blur, then \n\t//\twe increase the resolution & blur (the lower-res blurred image from the previous pass) again...\n\telse if (PASSINDEX == 4)\t{\n\t\tvec4\t\tsample0 = IMG_NORM_PIXEL(quarterSizePassB,texOffsets[0]);\n\t\tvec4\t\tsample1 = IMG_NORM_PIXEL(quarterSizePassB,texOffsets[1]);\n\t\tvec4\t\tsample2 = IMG_NORM_PIXEL(quarterSizePassB,texOffsets[2]);\n\t\tvec4\t\tsample3 = IMG_NORM_PIXEL(quarterSizePassB,texOffsets[3]);\n\t\tvec4\t\tsample4 = IMG_NORM_PIXEL(quarterSizePassB,texOffsets[4]);\n\t\t//gl_FragColor = vec4((sample0 + sample1 + sample2).rgb / (3.0), 1.0);\n\t\tgl_FragColor = vec4((sample0 + sample1 + sample2 + sample3 + sample4).rgb / (5.0), 1.0);\n\t}\n\telse if (PASSINDEX == 5)\t{\n\t\tvec4\t\tsample0 = IMG_NORM_PIXEL(quarterGaussA,texOffsets[0]);\n\t\tvec4\t\tsample1 = IMG_NORM_PIXEL(quarterGaussA,texOffsets[1]);\n\t\tvec4\t\tsample2 = IMG_NORM_PIXEL(quarterGaussA,texOffsets[2]);\n\t\tvec4\t\tsample3 = IMG_NORM_PIXEL(quarterGaussA,texOffsets[3]);\n\t\tvec4\t\tsample4 = IMG_NORM_PIXEL(quarterGaussA,texOffsets[4]);\n\t\t//gl_FragColor = vec4((sample0 + sample1 + sample2).rgb / (3.0), 1.0);\n\t\tgl_FragColor = vec4((sample0 + sample1 + sample2 + sample3 + sample4).rgb / (5.0), 1.0);\n\t}\n\t//\t...writes into the full-size\n\telse if (PASSINDEX == 6)\t{\n\t\tvec4\t\tsample0 = IMG_NORM_PIXEL(quarterGaussB,texOffsets[0]);\n\t\tvec4\t\tsample1 = IMG_NORM_PIXEL(quarterGaussB,texOffsets[1]);\n\t\tvec4\t\tsample2 = IMG_NORM_PIXEL(quarterGaussB,texOffsets[2]);\n\t\tgl_FragColor =  vec4((sample0 + sample1 + sample2).rgb / (3.0), 1.0);\n\t}\n\telse if (PASSINDEX == 7)\t{\n\t\t//\tthis is the last pass- calculate the blurred image as i have in previous passes, then mix it in with the full-size input image using the blur amount so i get a smooth transition into the blur at low blur levels\n\t\tvec4\t\tsample0 = IMG_NORM_PIXEL(fullGaussA,texOffsets[0]);\n\t\tvec4\t\tsample1 = IMG_NORM_PIXEL(fullGaussA,texOffsets[1]);\n\t\tvec4\t\tsample2 = IMG_NORM_PIXEL(fullGaussA,texOffsets[2]);\n\t\tvec4\t\tblurredImg =  vec4((sample0 + sample1 + sample2).rgb / (3.0), 1.0);\n\t\tvec4\t\toriginalImg = IMG_NORM_PIXEL(edges,isf_FragNormCoord);\n\t\tif (blurLevel == 0)\n\t\t\tblurredImg = mix(originalImg, blurredImg, (blurLevelModulus/6.0));\n\t\t\n\t\tgl_FragColor = max(mix(originalImg,blurredImg*1.9,intensity), originalImg);\n\t}\n\t\n}\n\n\n\nvec3 rgb2hsv(vec3 c)\t{\n\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\t//vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n\t//vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\tvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n\tvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\t\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\nfloat gray(vec4 n)\n{\n\treturn (n.r + n.g + n.b)/3.0;\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false,"Format":0,"Filter":2,"AddressMode":1},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"blurAmount","Exposed":"bluramount","Value":{"Float":4.0},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":12.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"intensity","Exposed":"intensity","Value":{"Float":0.5},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"edgeIntensity","Exposed":"edgeintensity","Value":{"Float":15.0},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":100.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"edgeThreshold","Exposed":"edgethreshold","Value":{"Float":0.0},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"erodeIntensity","Exposed":"erodeintensity","Value":{"Float":0.25},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"erodeRadius","Exposed":"eroderadius","Value":{"Float":1.0},"Init":{},"Domain":{"Float":{"Min":1.0,"Max":15.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false,"Address":"Window:/"}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":2,"Metadata":{"ScriptingName":"GalacticCorridors2","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":9172800000,"Height":300.0,"StartOffset":0,"LoopDuration":4586400000,"Pos":[-623.8368051171199,16.24665887374377],"Size":[149.0625,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\" : \"Galactic Corridors 2 by vox\",\n\t\"CATEGORIES\" : [\n\t\t\"ci\"\n\t],\n\t\"DESCRIPTION\": \"\",\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\" : \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iZoom\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 0.1,\n\t\t\t\"MAX\" : 2.0,\n\t\t\t\"DEFAULT\" : 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iSteps\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 2.0,\n\t\t\t\"MAX\" : 75.0,\n\t\t\t\"DEFAULT\" : 19.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iTimeMultiplier\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 0.01,\n\t\t\t\"MAX\" : 10.0,\n\t\t\t\"DEFAULT\" : 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\" :\"iMouse\",\n\t\t\t\"TYPE\" : \"point2D\",\n\t\t\t\"DEFAULT\" : [0.0, 0.0],\n\t\t\t\"MAX\" : [640.0, 480.0],\n\t\t\t\"MIN\" : [0.0, 0.0]\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iColor\", \n\t\t\t\"TYPE\" : \"color\", \n\t\t\t\"DEFAULT\" : [\n\t\t\t\t0.9, \n\t\t\t\t0.6, \n\t\t\t\t0.0, \n\t\t\t\t1.0\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n// https://www.shadertoy.com/view/Xtc3Rn\n//-----------------CONSTANTS MACROS-----------------\n\n#define PI 3.14159265359\n#define E 2.7182818284\n#define GR 1.61803398875\n\n//-----------------UTILITY MACROS-----------------\n\n#define localTime (sin(((sin(float(__LINE__)*100.0)*GR/PI+GR/PI/E)*TIME * iTimeMultiplier+100.0)/100.0)*100.0)\n#define saw(x) (acos(cos(x))/PI)\n#define sphereN(uv) (clamp(1.0-length(uv*2.0-1.0), 0.0, 1.0))\n#define clip(x) (smoothstep(0.5-GR/PI/E, .5+GR/PI/E, x))\n#define zero(x) (smoothstep(-1.0/PI/E/GR, 1.0/PI/E/GR, sin(x*PI/2.0))*2.0-1.0)\n#define TIMES_DETAILED (1.0)\n#define angle(uv) (atan((uv).y, (uv).x))\n#define angle_percent(uv) ((angle(uv)/PI+1.0)/2.0)\n#define absMin(x,y) (abs(x) < abs(y) ? x: y)\n#define quadrant(uv) (absMin((zero(uv).x), (zero(uv).y))+floor(uv.x/2.0)+floor(uv.y/2.0))\n\n#define flux(x) (vec3(cos(x),cos(4.0*PI/3.0+x),cos(2.0*PI/3.0+x))*.5+.5)\n#define rotatePoint(p,n,theta) (p*cos(theta)+cross(n,p)*sin(theta)+n*dot(p,n) *(1.0-cos(theta)))\n#define GUASS(x) (smoothstep(0.0, 1.0/GR/PI/E, saw(x*PI/2.0)*(1.0-saw(x*PI/2.0))))\n\n#define GRID_COUNT (50.0)\n#define hash(p) (fract(sin(vec2( dot(p,vec2(127.5,313.7)),dot(p,vec2(239.5,185.3))))*43458.3453))\n\n#define MAX_DIM (max(RENDERSIZE.x, RENDERSIZE.y))\n\n\n\nvec3 powa(vec3 x, float y){ return vec3(pow(x.x, y), pow(x.y, y), pow(x.z, y)); }\n\nfloat seedling = 0.0;\n\nvec2 spiral(vec2 uv)\n{\n    float turns = 5.0;\n    float r = pow(log(length(uv)+1.), 1.175);\n    float theta = atan(uv.y, uv.x)*turns-r*PI;\n    return vec2(saw(r*PI+TIME), saw(theta+TIME*1.1));\n}\n\nvec2 cmul(vec2 v1, vec2 v2) {\n    return vec2(v1.x * v2.x - v1.y * v2.y, v1.y * v2.x + v1.x * v2.y);\n}\n\nvec2 cdiv(vec2 v1, vec2 v2) {\n    return vec2(v1.x * v2.x + v1.y * v2.y, v1.y * v2.x - v1.x * v2.y) / dot(v2, v2);\n}\n\nvec2 mobius(vec2 uv, vec2 multa, vec2 offa, vec2 multb, vec2 offb)\n{\n    return saw(cdiv(cmul(uv, multa) + offa, cmul(uv, multb) + offb)*PI)*2.0-1.0;\n}\n\nvec2 square_map(vec2 uv)\n{\n    return (rotatePoint(vec3(uv+vec2(cos(seedling*PI), cos(seedling*GR)), 0.0), vec3(0.0, 0.0, 1.0), localTime/PI).xy*(1.0+sin(localTime+seedling)/PI/E/GR)\n            +vec2(cos(localTime+seedling)+sin(localTime+seedling)));\n}\n\nvec2 iterate_square(vec2 uv, vec2 dxdy, out float magnification)\n{\n    vec2 a = uv+vec2(0.0,       0.0);\n    vec2 b = uv+vec2(dxdy.x,    0.0);\n    vec2 c = uv+vec2(dxdy.x,    dxdy.y);\n    vec2 d = uv+vec2(0.0,       dxdy.y);//((fragCoord.xy + vec2(0.0, 1.0)) / RENDERSIZE.xy * 2.0 - 1.0) * aspect;\n\n    vec2 ma = square_map(a);\n    vec2 mb = square_map(b);\n    vec2 mc = square_map(c);\n    vec2 md = square_map(d);\n    \n    float da = length(mb-ma);\n    float db = length(mc-mb);\n    float dc = length(md-mc);\n    float dd = length(ma-md);\n    \n    float stretch = max(max(max(da/dxdy.x,db/dxdy.y),dc/dxdy.x),dd/dxdy.y);\n    \n    magnification = stretch;\n    \n    return square_map(uv);\n}\nvec2 mobius_map(vec2 uv, vec2 multa, vec2 offa, vec2 multb, vec2 offb)\n{\n    return mobius(uv, multa, offa, multb, offb);\n}\n\nvec2 iterate_mobius(vec2 uv, vec2 dxdy, out float magnification, vec2 multa, vec2 offa, vec2 multb, vec2 offb)\n{\n    vec2 a = uv+vec2(0.0,       0.0);\n    vec2 b = uv+vec2(dxdy.x,    0.0);\n    vec2 c = uv+vec2(dxdy.x,    dxdy.y);\n    vec2 d = uv+vec2(0.0,       dxdy.y);//((fragCoord.xy + vec2(0.0, 1.0)) / RENDERSIZE.xy * 2.0 - 1.0) * aspect;\n\n    vec2 ma = mobius_map(a, multa, offa, multb, offb);\n    vec2 mb = mobius_map(b, multa, offa, multb, offb);\n    vec2 mc = mobius_map(c, multa, offa, multb, offb);\n    vec2 md = mobius_map(d, multa, offa, multb, offb);\n    \n    float da = length(mb-ma);\n    float db = length(mc-mb);\n    float dc = length(md-mc);\n    float dd = length(ma-md);\n    \n    float stretch = max(max(max(da/dxdy.x,db/dxdy.y),dc/dxdy.x),dd/dxdy.y);\n    \n    magnification = stretch;\n    \n    return mobius_map(uv, multa, offa, multb, offb);\n}\nvec3 phase(float map)\n{\n    return vec3(saw(map),\n                saw(4.0*PI/3.0+map),\n                saw(2.0*PI/3.0+map));\n}\n\nfloat lowAverage()\n{\n    const int iters = 32;\n    float product = 1.0;\n    float sum = 0.0;\n    \n    float smallest = 0.0;\n    \n    for(int i = 0; i < iters; i++)\n    {\n        //float sound = texture2D(iChannel0, vec2(float(i)/float(iters), 0.5)).r;\n        float sound = IMG_NORM_PIXEL(inputImage, vec2(float(i)/float(iters), 0.5)).r;\n        smallest = \n        \n        product *= sound;\n        sum += sound;\n    }\n    return max(sum/float(iters), pow(product, 1.0/float(iters)));\n}\n\nfloat last_height = 0.0;\nvec3 hash3( vec2 p)\n\n{\n\n    vec3 q = vec3( dot(p,vec2(123.4,234.5)),\n\n    dot(p,vec2(456.7,321.0)),\n\n    dot(p,vec2(432.1,543.2)) );\n\n    return fract(sin(q)*12345.678);\n\n}\n\nvec4 galaxy(vec2 uv)\n{\n    uv *= 5.0;\n      \n    float r1 = log(length(uv)+1.)*2.0;\n    float r2 = pow(log(length(uv)+1.)*3.0, .5);\n    \n    float rotation = localTime;\n    \n    float theta1 = atan(uv.y, uv.x)-r1*PI+rotation*.5+seedling;\n    float theta2 = atan(uv.y, uv.x)-r2*PI+rotation*.5+seedling;\n    \n    vec4 color = vec4(flux(localTime+seedling), 1.0);\n    \n    vec4 final = acos(1.0-(cos(theta1)*cos(theta1)+sqrt(cos(theta1+PI)*cos(theta1+PI)))/2.0)*(1.0-log(r1+1.))*color\n              + cos(1.0-(cos(theta2)*cos(theta2)+cos(theta2+PI/2.)*cos(theta2+PI/2.))/2.0)*(1.25-log(r2+1.))*color;\n         \n    final.rgba += color;\n    \n    final /= r1;\n    \n    final *= 2.0;\n    \n    float weight = clamp(length(clamp(final.rgb, 0.0, 1.0)), 0.0, 1.0);\n    return final;\n}\nvoid main(void)\n{  \t\t\n    vec2 uv = gl_FragCoord.xy / RENDERSIZE.xy * iZoom;\n    \n\t//vec4 the_sample = texture2D(iChannel1, uv);\n    vec4 the_sample = IMG_NORM_PIXEL(inputImage, uv);\n    float scale = exp(sin(localTime))*E+GR;\n    uv = uv*scale-scale/2.0;\n    uv.x *= RENDERSIZE.x/RENDERSIZE.y;\n    uv = rotatePoint(vec3(uv, 0.0), vec3(0.0, 0.0, 1.0), localTime/PI).xy;\n    vec2 uv0 = uv;\n    uv += cos(vec2(localTime, localTime/GR));\n    float r = length(uv);\n\n    \n    float map = localTime;\n    float noise = 1.0;\n    float spounge = localTime*4.0*PI;\n    const int max_iterations = 4;\n    int target = max_iterations;//-int(saw(spounge)*float(max_iterations)/2.0);\n    \n    vec2 multa, multb, offa, offb;\n    \n    float antispeckle = 1.0; \n    float magnification = 1.0;\n  \n    vec3 color = vec3(1.0);\n    vec3 accum = vec3(0.0);\n    float sum = 0.0;\n    float anticolor = 1.0;\n    seedling = 0.0;\n    \n    float black, white;\n    white = 0.0;\n        \n    float border_color = 0.0;\n    float border = 0.0;\n    \n    vec4 hit = vec4(0.0);\n    \n    for(int i = 0; i < max_iterations; i++)\n    {\n        float iteration = float(i)/float(max_iterations);\n        \n        multa = cos(vec2(localTime*1.1, localTime*1.2)+iteration*PI);\n        offa = cos(vec2(localTime*1.3, localTime*1.4)+iteration*PI)*PI;\n        multb = cos(vec2(localTime*1.5, localTime*1.6)+iteration*PI);\n        offb = cos(vec2(localTime*1.7, localTime*1.8)+iteration*PI);\n        \n        uv = iterate_square(uv, .5/RENDERSIZE.xy, magnification);\n        float weight = smoothstep(0.0, 0.25, magnification);\n        antispeckle *= smoothstep(0.0, 1.0/TIMES_DETAILED, sqrt(1.0/(1.0+magnification)));\n        \n        float q = quadrant(uv);\n        seedling += q+float(i);\n\n        map += (q+seedling)*antispeckle;\n        float shift = localTime;\n\n        border = max(border, (smoothstep(1.0-1.0/GR/E/PI, 1.0, (cos(uv.y*PI)))));\n\n        border = max(border, (smoothstep(1.0-1.0/GR/E/PI, 1.0, (cos(uv.x*PI)))));\n        \n        float stripes = map*1.0*PI;//*floor(log(max(RENDERSIZE.x, RENDERSIZE.y))/log(2.0));\n        float black = smoothstep(0.0, .75, saw(stripes))*clamp(1.0-abs(border), 0.0, 1.0);\n        float white = smoothstep(0.75, 1.0, saw(stripes))*black;\n\n        vec3 final = flux(map*2.0*PI+shift+float(i))*black+white;\n\n\n        color *= (final);\n        accum += final;\n        sum += 1.0;\n        anticolor *= white;\n\n        if(i != 0)\n        {\n            hit += galaxy(saw(uv*PI/2.0)*2.0-1.0)*clamp(1.0-length(hit.rgb), 0.0, 1.0)*(1.0-border);\n            \n            uv = iterate_mobius(uv, .5/RENDERSIZE.xy, magnification, multa, offa, multb, offb);\n            antispeckle *= smoothstep(0.0, 1.0/TIMES_DETAILED, sqrt(1.0/(1.0+magnification)));\n            border = max(border, (smoothstep(1.0-1.0/GR/E/PI, 1.0, (cos(uv.y*PI)))));\n\n            border = max(border, (smoothstep(1.0-1.0/GR/E/PI, 1.0, (cos(uv.x*PI)))));\n\n        }\n    }\n    \n\n    scale = 32.;\n    vec2 gridPosition = floor(uv0 * scale) / scale;\n    vec2 randomOffset = hash(gridPosition) * 2. - 1.;\n    vec2 localGridPositionCenter = fract(uv0 * scale) - .5;\n    float stars = mix(0., 1., step(length(localGridPositionCenter + randomOffset * .5), .1));\n\n    float map2 = (stars+length(randomOffset))*PI*2.0;\n\n    float twinkle = saw(localTime+map2);\n\n    hit = hit+clamp(vec4(flux(map2+localTime)*PI+twinkle, 1.0)*stars*twinkle*PI, 0.0, 1.0)*clamp(1.0-(border), 0.0, 1.0);\n    \n    color = powa(color, 1.0/float(max_iterations));\n    \n    antispeckle = pow(antispeckle, 1.0/float(max_iterations));\n    \n    gl_FragColor.rgb = (color+accum/sum)*(1.0-border);\n    gl_FragColor.a = 1.0;\n    \n    gl_FragColor = hit;\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false,"Format":0,"Filter":2,"AddressMode":1},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"iZoom","Exposed":"izoom","Value":{"Float":1.7310748100280762},"Init":{},"Domain":{"Float":{"Min":0.10000000149011612,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"iSteps","Exposed":"isteps","Value":{"Float":19.0},"Init":{},"Domain":{"Float":{"Min":2.0,"Max":75.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"iTimeMultiplier","Exposed":"itimemultiplier","Value":{"Float":1.0},"Init":{},"Domain":{"Float":{"Min":0.009999999776482582,"Max":10.0}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"iMouse","Exposed":"imouse","Value":{"Vec2f":[0.0,0.0]},"Init":{},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[640.0,480.0],"Values":[[],[]]}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"iColor","Exposed":"icolor","Value":{"Vec4f":[0.8999999761581421,0.6000000238418579,0.0,1.0]},"Init":{},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"9ce44e4b-eeb6-4042-bb7f-9d0b28190daf","ObjectName":"gfxProcess","id":1,"Metadata":{"ScriptingName":"Model Display","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":9172800000,"Height":300.0,"StartOffset":0,"LoopDuration":4586400000,"Pos":[39.097995555555514,77.69232888888882],"Size":[121.046875,22.0],"Loops":false,"Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false,"Format":0,"Filter":2,"AddressMode":1},{"uuid":"f2ab26ea-415d-45a2-bfbc-2968c7c92a33","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"377e8205-b442-4d54-8832-3761def522b2","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"Position","Exposed":"position","Value":{"Vec3f":[-5.7142333984375,-7.6190185546875,1.90472412109375]},"Init":{},"Domain":{"Vec3f":{"Min":[-1000.0,-1000.0,-1000.0],"Max":[1000.0,1000.0,1000.0],"Values":[[],[],[]]}}},{"uuid":"377e8205-b442-4d54-8832-3761def522b2","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"Center","Exposed":"center","Value":{"Vec3f":[0.0,0.0,0.0]},"Init":{},"Domain":{"Vec3f":{"Min":[-1000.0,-1000.0,-1000.0],"Max":[1000.0,1000.0,1000.0],"Values":[[],[],[]]}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"FOV","Exposed":"fov","Value":{"Float":90.0},"Init":{},"Domain":{"Float":{"Min":0.009999999776482582,"Max":359.9989929199219}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"Near","Exposed":"near","Value":{"Float":0.0010000000474974513},"Init":{},"Domain":{"Float":{"Min":0.0010000000474974513,"Max":1000.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"Far","Exposed":"far","Value":{"Float":100000.0},"Init":{},"Domain":{"Float":{"Min":0.0010000000474974513,"Max":10000.0}}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"Projection","Exposed":"projection","Value":{"Int":6},"Init":{},"Domain":{"Int":{"Values":[0,2,4,5,1,3,6]}},"Values":[["Texture coordinates",{"Int":0}],["Spherical",{"Int":2}],["View-space",{"Int":4}],["Barycentric",{"Int":5}],["Funky A",{"Int":1}],["Funky B",{"Int":3}],["Light",{"Int":6}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"Mode","Exposed":"mode","Value":{"Int":0},"Init":{"Int":0},"Domain":{"Int":{"Values":[0,1,2]}},"Values":[["Triangles",{"Int":0}],["Points",{"Int":1}],["Lines",{"Int":2}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"Camera","Exposed":"camera","Value":{"Int":0},"Init":{"Int":0},"Domain":{"Int":{"Values":[0,1]}},"Values":[["Perspective",{"Int":0}],["Fulldome (1-pass)",{"Int":1}]]}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":0,"Hidden":false}]},{"uuid":"bb8f3d77-4cfd-44ce-9c43-b64c54a748ab","ObjectName":"structure_synth","id":9,"Metadata":{"ScriptingName":"Octopod II","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":9172800000,"Height":300.0,"StartOffset":0,"LoopDuration":9172800000,"Pos":[-237.2397672408756,182.84660356934205],"Size":[98.03125,22.0],"Loops":false,"Inlets":[{"uuid":"de15c0da-429b-49d3-bb07-7c41f5f205c8","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"Program","Exposed":"program","Value":{"String":"set maxdepth 100\r\n\r\n10 * { ry 36 sat 0.9 } 30 * { ry 10 } 1 * { h 30 b 0.8 sat 0.8 a 0.3  } r1\r\n\r\nrule r1 w 20 {\r\n   { s 0.9 rz 5 h 5 rx 5 x 1 }  r1\r\n   { s 1 0.2 0.5 } box\r\n}\r\n\r\nrule r1 w 20 {\r\n   {  s 0.99 rz -5 h 5 rx -5 x 1 }   r1\r\n   { s 1 0.2 0.5 } box\r\n}\r\n\r\nrule r1  {\r\n}"},"Init":{},"Domain":{}},{"uuid":"377e8205-b442-4d54-8832-3761def522b2","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"Position","Exposed":"position","Value":{"Vec3f":[0.0,0.0,0.0]},"Init":{},"Domain":{"Vec3f":{"Min":[-1000.0,-1000.0,-1000.0],"Max":[1000.0,1000.0,1000.0],"Values":[[],[],[]]}}},{"uuid":"377e8205-b442-4d54-8832-3761def522b2","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"Rotation","Exposed":"rotation","Value":{"Vec3f":[0.0,0.0,0.0]},"Init":{},"Domain":{"Vec3f":{"Min":[0.0,0.0,0.0],"Max":[360.0,360.0,360.0],"Values":[[],[],[]]}}},{"uuid":"377e8205-b442-4d54-8832-3761def522b2","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"Scale","Exposed":"scale","Value":{"Vec3f":[1.0,1.0,1.0]},"Init":{},"Domain":{"Vec3f":{"Min":[0.000009999999747378752,0.000009999999747378752,0.000009999999747378752],"Max":[1000.0,1000.0,1000.0],"Values":[[],[],[]]}}},{"uuid":"7cd210d3-ebd1-4f71-9de6-cccfb639cbc3","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"Regenerate","Exposed":"regenerate","Value":{"Impulse":null},"Init":{},"Domain":{"Impulse":null}}],"Outlets":[{"uuid":"848061c5-e8a0-4a13-9985-e8df30ce6d4f","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Geometry","Exposed":"geometry"}]}],"SmallViewRack":[{"Processes":[1,2,3,6,7,8,9],"Process":null,"Height":564.0,"Nodal":true},{"Processes":[5],"Process":5,"Height":50.0,"Nodal":false}],"FullViewRack":[{"Process":0,"Nodal":true},{"Process":5,"Nodal":false}],"DefaultDuration":9172800000,"MinDuration":4586400000,"MaxDuration":4611686018427387903,"GuiDuration":10478160000,"Speed":1.0,"Rigidity":false,"MinNull":true,"MaxInf":true,"Signatures":[],"StartState":8,"EndState":9,"StartDate":0,"HeightPercentage":0.03933333333333339,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":6552000.0,"Center":1049562983,"NodalOffset":[396.0,167.0],"ViewMode":1,"SmallViewShown":true,"HasSignature":false}],"Comments":[]}],"SmallViewRack":[],"FullViewRack":[{"Process":1,"Nodal":false}],"DefaultDuration":10584000000,"MinDuration":10584000000,"MaxDuration":11113200000,"GuiDuration":11642400000,"Speed":0.552,"Rigidity":false,"MinNull":false,"MaxInf":true,"Signatures":[[0,[4,4]]],"StartState":0,"EndState":1,"StartDate":0,"HeightPercentage":0.0,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":12893023.255813954,"Center":4874455384,"ViewMode":0,"SmallViewShown":false,"HasSignature":true},"StartTimeNode":{"ObjectName":"Scenario::TimeSyncModel","id":0,"Metadata":{"ScriptingName":"Sync.start","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":0,"Events":[0],"MusicalSync":-1.0,"AutoTrigger":false,"Start":true,"Active":false,"Expression":" { true == false } "},"EndTimeNode":{"ObjectName":"Scenario::TimeSyncModel","id":1,"Metadata":{"ScriptingName":"Sync.end","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":10584000000,"Events":[1],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":true,"Expression":" { true == false } "},"StartEvent":{"ObjectName":"Scenario::EventModel","id":0,"Metadata":{"ScriptingName":"Event.start","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":0,"States":[0],"Condition":"","Date":0,"Offset":0},"EndEvent":{"ObjectName":"Scenario::EventModel","id":1,"Metadata":{"ScriptingName":"Event.end","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":1,"States":[1],"Condition":"","Date":10584000000,"Offset":0},"StartState":{"ObjectName":"Scenario::StateModel","id":0,"Metadata":{"ScriptingName":"State.start","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":0,"PreviousConstraint":null,"NextConstraint":0,"HeightPercentage":0.0,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},"EndState":{"ObjectName":"Scenario::StateModel","id":1,"Metadata":{"ScriptingName":"State.end","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":1,"PreviousConstraint":0,"NextConstraint":null,"HeightPercentage":0.0,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]}},"Speed":0.552,"Cables":[{"ObjectName":"Process::Cable","id":15,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"structure_synth","ObjectId":9},{"ObjectName":"Outlet","ObjectId":0}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":1,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"gfxProcess","ObjectId":2},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":5,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Outlet","ObjectId":0}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"gfxProcess","ObjectId":3},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":7,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"Process::ProcessModel","ObjectId":6},{"ObjectName":"Outlet","ObjectId":0}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":2}]},{"ObjectName":"Process::Cable","id":11,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"Process::ProcessModel","ObjectId":7},{"ObjectName":"Outlet","ObjectId":0}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"Process::ProcessModel","ObjectId":8},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":12,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"Process::ProcessModel","ObjectId":8},{"ObjectName":"Outlet","ObjectId":0}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"Process::ProcessModel","ObjectId":6},{"ObjectName":"Inlet","ObjectId":3}]},{"ObjectName":"Process::Cable","id":13,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"Process::ProcessModel","ObjectId":8},{"ObjectName":"Outlet","ObjectId":0}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"Process::ProcessModel","ObjectId":6},{"ObjectName":"Inlet","ObjectId":2}]},{"ObjectName":"Process::Cable","id":14,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"Process::ProcessModel","ObjectId":8},{"ObjectName":"Outlet","ObjectId":0}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":6},{"ObjectName":"Process::ProcessModel","ObjectId":6},{"ObjectName":"Inlet","ObjectId":1}]}],"BusIntervals":[]},"Plugins":[{"uuid":"1f923578-08c3-49be-9ba9-69c144ee2e32","Refresh":false,"Reconnect":false,"MidiRatio":1.0},{"uuid":"6e610e1f-9de2-4c36-90dd-0ef570002a21","RootNode":{},"Children":[{"Device":{"Name":"Window","Protocol":"5a181207-7d40-4ad8-814e-879fcdf8cc31"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":100}},"Name":"screen"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{},"Name":"position"}},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"cursor"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Float":{"Min":0.0,"Max":1.0}},"Name":"scaled"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[0.0,0.0],"Values":[[],[]]}},"Name":"absolute"}}]},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"tablet"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Float":{"Min":0.0,"Max":1.0}},"Name":"scaled"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1280.0,720.0],"Values":[[],[]]}},"Name":"absolute"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Int":0},"Domain":{},"Name":"z"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"pressure"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-1.0,"Max":1.0}},"Name":"tangential"}},{"Address":{"ioType":"<->","ClipMode":"Free","Unit":"angle.degree","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-180.0,"Max":180.0}},"Name":"rotation"}},{"Address":{"ioType":"<->","ClipMode":"Free","Unit":"angle.degree","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-60.0,"Max":60.0}},"Name":"tilt_x"}},{"Address":{"ioType":"<->","ClipMode":"Free","Unit":"angle.degree","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-60.0,"Max":60.0}},"Name":"tilt_y"}}]},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[1280.0,720.0]},"Domain":{},"Name":"size"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{},"Extended":{"description":"Set to [0, 0] to use the viewport's size"},"Name":"rendersize"}},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"key"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Int":0},"Domain":{},"Name":"code"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"String":""},"Domain":{},"Name":"text"}}]},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Bool":false},"Domain":{},"Name":"fullscreen"}}]}]}],"Version":4,"Commit":"46219cb78aeb862d864a1876052ef6862994da2b","Tag":"3.5.3"}